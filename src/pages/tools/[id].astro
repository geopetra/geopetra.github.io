---
import Layout from '~/layouts/PageLayout.astro';
import Image from '~/components/common/Image.astro';
import { getToolWithDetails } from '~/utils/database';

export async function getStaticPaths() {
  // This would be replaced with actual data fetching in production
  // For now, we'll return an empty array which means this route
  // will be generated at request time (SSR)
  return [];
}

const { id } = Astro.params;
const tool = await getToolWithDetails(id);

const metadata = {
  title: tool ? `${tool.name} | Petrology Tool` : 'Tool Not Found',
  description: tool?.description || 'Detailed information about this petrology research tool',
};
---

<Layout metadata={metadata}>
  {tool ? (
    <section class="px-4 py-16 sm:px-6 mx-auto lg:px-8 lg:py-20 max-w-4xl">
      <div class="flex flex-col md:flex-row gap-8">
        {tool.logo && (
          <div class="md:w-1/3">
            <Image
              src={tool.logo}
              alt={tool.name}
              class="w-full max-w-xs mx-auto rounded-lg shadow-lg"
              width={300}
              height={300}
            />
          </div>
        )}
        
        <div class="md:w-2/3">
          <h1 class="text-4xl font-bold mb-2">{tool.name}</h1>
          {tool.version && <p class="text-xl text-gray-600 dark:text-gray-400 mb-4">Version {tool.version}</p>}
          
          <div class="mb-6">
            <h2 class="text-2xl font-semibold mb-2">Description</h2>
            <p class="text-gray-700 dark:text-gray-300">{tool.description}</p>
          </div>
          
          {tool.homepage && (
            <div class="mb-6">
              <h2 class="text-2xl font-semibold mb-2">Homepage</h2>
              <a href={tool.homepage} target="_blank" rel="noopener noreferrer" 
                 class="text-blue-600 dark:text-blue-400 hover:underline">
                {tool.homepage}
              </a>
            </div>
          )}
          
          {tool.topics && tool.topics.length > 0 && (
            <div class="mb-6">
              <h2 class="text-2xl font-semibold mb-2">Topics</h2>
              <div class="flex flex-wrap gap-2">
                {tool.topics.map((topic) => (
                  <span class="px-3 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-100 rounded-full">
                    {topic.term || topic.name || ''}
                  </span>
                ))}
              </div>
            </div>
          )}
          
          {tool.functions && tool.functions.length > 0 && (
            <div class="mb-6">
              <h2 class="text-2xl font-semibold mb-2">Functions</h2>
              <ul class="list-disc pl-5">
                {tool.functions.map((func) => (
                  <li class="text-gray-700 dark:text-gray-300">
                    {func.operation && Array.isArray(func.operation) ? func.operation.join(', ') : func.operation || func.name || ''}
                    {func.note && <span class="ml-2 text-gray-500">- {func.note}</span>}
                  </li>
                ))}
              </ul>
            </div>
          )}
          
          {tool.operatingSystems && tool.operatingSystems.length > 0 && (
            <div class="mb-6">
              <h2 class="text-2xl font-semibold mb-2">Operating Systems</h2>
              <div class="flex flex-wrap gap-2">
                {tool.operatingSystems.map((os) => (
                  <span class="px-3 py-1 bg-gray-100 dark:bg-gray-800 text-gray-800 dark:text-gray-200 rounded-full">
                    {os.name}
                  </span>
                ))}
              </div>
            </div>
          )}
          
          {tool.toolTypes && tool.toolTypes.length > 0 && (
            <div class="mb-6">
              <h2 class="text-2xl font-semibold mb-2">Tool Types</h2>
              <div class="flex flex-wrap gap-2">
                {tool.toolTypes.map((type) => (
                  <span class="px-3 py-1 bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-100 rounded-full">
                    {type.type}
                  </span>
                ))}
              </div>
            </div>
          )}
          
          {tool.languages && tool.languages.length > 0 && (
            <div class="mb-6">
              <h2 class="text-2xl font-semibold mb-2">Programming Languages</h2>
              <div class="flex flex-wrap gap-2">
                {tool.languages.map((lang) => (
                  <span class="px-3 py-1 bg-purple-100 dark:bg-purple-900 text-purple-800 dark:text-purple-100 rounded-full">
                    {lang.name}
                  </span>
                ))}
              </div>
            </div>
          )}
          
          {tool.documentation && (
            <div class="mb-6">
              <h2 class="text-2xl font-semibold mb-2">Documentation</h2>
              <a href={tool.documentation} target="_blank" rel="noopener noreferrer" 
                 class="text-blue-600 dark:text-blue-400 hover:underline">
                View Documentation
              </a>
            </div>
          )}
          
          {tool.development_stage && (
            <div class="mb-6">
              <h2 class="text-2xl font-semibold mb-2">Development Stage</h2>
              <p>{tool.development_stage}</p>
            </div>
          )}
          
          {tool.license && (
            <div class="mb-6">
              <h2 class="text-2xl font-semibold mb-2">License</h2>
              <p>{tool.license}</p>
            </div>
          )}
          {tool.citation && (
            <div class="mb-6">
              <h2 class="text-2xl font-semibold mb-2">Citation</h2>
              <div class="bg-gray-50 dark:bg-gray-800 p-4 rounded-lg">
                {(() => {
                  try {
                    const citationData = typeof tool.citation === 'string' ? JSON.parse(tool.citation) : tool.citation;
                    return (
                      <div>
                        {citationData.papers && citationData.papers.map((paper) => (
                          <div class="mb-3 last:mb-0">
                            <p class="font-medium">{paper.title}</p>
                            <p class="text-sm text-gray-600 dark:text-gray-400">
                              {paper.authors} ({paper.year}). {paper.journal}.
                              {paper.doi && (
                                <a href={`https://doi.org/${paper.doi}`} target="_blank" rel="noopener noreferrer" 
                                   class="ml-1 text-blue-600 hover:text-blue-800">
                                  DOI: {paper.doi}
                                </a>
                              )}
                            </p>
                          </div>
                        ))}
                      </div>
                    );
                  } catch (e) {
                    return <p>{tool.citation}</p>;
                  }
                })()}
              </div>
            </div>
          )}

          {tool.support && (
            <div class="mb-6">
              <h2 class="text-2xl font-semibold mb-2">Support</h2>
              <div class="bg-gray-50 dark:bg-gray-800 p-4 rounded-lg">
                {(() => {
                  try {
                    const supportData = typeof tool.support === 'string' ? JSON.parse(tool.support) : tool.support;
                    return (
                      <div>
                        {supportData.contacts && supportData.contacts.map((contact) => (
                          <div class="mb-2 last:mb-0">
                            <p class="font-medium">{contact.name} {contact.role && `(${contact.role})`}</p>
                            {contact.email && (
                              <a href={`mailto:${contact.email}`} class="text-blue-600 hover:text-blue-800">
                                {contact.email}
                              </a>
                            )}
                          </div>
                        ))}
                      </div>
                    );
                  } catch (e) {
                    return <p>{tool.support}</p>;
                  }
                })()}
              </div>
            </div>
          )}
        </div>
      </div>
    </section>
  ) : (
    <section class="px-4 py-16 sm:px-6 mx-auto lg:px-8 lg:py-20 max-w-4xl text-center">
      <h1 class="text-4xl font-bold mb-4">Tool Not Found</h1>
      <p class="text-xl text-gray-700 dark:text-gray-300">
        The tool with ID "{id}" could not be found in our database.
      </p>
      <div class="mt-8">
        <a href="/tools" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
          Back to Tools List
        </a>
      </div>
    </section>
  )}
</Layout>
